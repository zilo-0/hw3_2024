html {
  scroll-behavior: smooth;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}

.overview {
  background-attachment: fixed;
  /* Parallax effect */
  background-position: center;
  /* Parallax effect */
  background-repeat: no-repeat;
  /* Parallax effect */
  background-size: cover;
  /* Parallax effect */
  color: white;
  height: 400px;
  /* Parallax effect */
}


.overview p {
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1 {
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2 {
  font-size: 32px;
  line-height: 1.5;
}

nav li {
  display: inline;
  padding-right: 20px;

}

nav a {
  color: black;
  font-weight: bold;
  text-decoration: none;
}


.skip a {
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav {
  background-color: #ddd;
  padding: 25px 0;
  text-align: left;
}

footer {
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}


.text-block {
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
}


@media screen and (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
    /* Removes scroll animation */
  }

  .skip a {
    -webkit-transition: none;
    /* sets to default setting */
    transition: none;
    /* sets to default setting */
  }

  /*Turn off parallax*/
  header {
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover,
nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip a {
  position: absolute;
  top: -40px;
  left: 0;
  padding: 6px;
  background: white;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
  top: 20px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

:focus {
  outline: none;
  border: 2px solid black;
}

/* Step 4: Write selector/rule property to style the container */
.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.container>*:first-child {
  grid-column: 1 / -1;
  /* Span across all columns */
  background-image: url('/images/header.jpg');
  background-attachment: fixed;
  /* Parallax effect */
  background-position: center;
  background-repeat: no-repeat;
  /* No repeat */
  background-size: cover;
  height: 400px;
  /* Adjust to match design */
  color: white;
  /* Ensure text color is readable */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */
/* For the mobile layout */
.about {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.method {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}

.clients {
  grid-column: 2 / 3;
  grid-row: 4 / 5;
}

.contact {
  grid-column: 2 / 3;
  grid-row: 5 / 6;
}

.about-image {
  grid-column: 1 / -1;
  grid-row: 2 / 3;
  max-height: 600px;
  overflow: hidden;
}

.method-image {
  grid-column: 1 / -1;
  grid-row: 3 / 4;
  max-height: 600px;
  overflow: hidden;
}

.clients-image {
  grid-column: 1 / -1;
  grid-row: 4 / 5;
  max-height: 600px;
  overflow: hidden;
}

.contact-image {
  grid-column: 1 / -1;
  grid-row: 5 / 6;
  max-height: 600px;
  overflow: hidden;
}

/*This will be a lot of rules.... but be strategic and combine seletors*/


/* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
  display: flex;
  /* Enable Flexbox */
  flex-direction: column;
  justify-content: center;
  /* Horizontally center the content */
  align-items: center;
  /* Vertically center the content */
  text-align: center;
  /* Center the text within the block */
  padding: 30px;
  /* Padding for spacing inside the block */
  background-color: rgba(255, 255, 255, 0.8);
  /* Existing background style */
  overflow: auto;
}


/* Add your media query here */
@media screen and (min-width: 800px) {

  /* 1. Align the navigation to the right */
  nav {
    text-align: right;
    padding: 30px 0;
    /* Padding of 30px on top and bottom, 0 on sides */
  }

  /* 2. Update the .container grid layout */
  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
    /* 5 columns layout */
    grid-gap: 15px;
    /* Optional gap between rows */
  }

  /* 3. .about, .clients, .method-image, .contact-image start in 3rd column, span 2 columns */
  .about,
  .clients,
  .method-image,
  .contact-image {
    grid-column: 3 / 5;
  }

  /* 4. .method, .contact, .about-image, .clients-image start in 2nd column, span 2 columns */
  .method,
  .contact,
  .about-image,
  .clients-image {
    grid-column: 2 / 4;
  }

  /* 5. Ensure .text-block has a maximum height of 250px and handle overflow */
  .text-block {
    max-height: 250px;
    overflow: auto;
    /* Allow scrolling for overflow content */
  }
}



/* Add your media query here */


/* Step 9: Write the selector/rule property to style the nav element */


/* Step 10: Write the selector/rule property to update the .container class */


/* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/



/* Step 13:Write the selector/rule property to update the .text-block class */


.overview {
  background-attachment: fixed;
  /* Parallax effect */
  background-position: center;
  /* Parallax effect */
  background-repeat: no-repeat;
  /* Parallax effect */
  background-size: cover;
  /* Parallax effect */
  color: white;
  height: 400px;
  /* Parallax effect */
}


.overview p {
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1 {
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2 {
  font-size: 32px;
  line-height: 1.5;
}

nav li {
  display: inline;
  padding-right: 20px;

}

nav a {
  color: black;
  font-weight: bold;
  text-decoration: none;
}


.skip a {
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav {
  background-color: #ddd;
  padding: 25px 0;
  text-align: left;
}

footer {
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}


.text-block {
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
}


@media screen and (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
    /* Removes scroll animation */
  }

  .skip a {
    -webkit-transition: none;
    /* sets to default setting */
    transition: none;
    /* sets to default setting */
  }

  /*Turn off parallax*/
  header {
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover,
nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip a {
  position: absolute;
  top: -40px;
  left: 0;
  padding: 6px;
  background: white;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
  top: 20px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

:focus {
  outline: none;
  border: 2px solid black;
}

/* Step 4: Write selector/rule property to style the container */
.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.container>*:first-child {
  grid-column: 1 / -1;
  background-image: url('/images/header.jpg');
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  height: 400px;
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  overflow: auto;
}


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */
/* For the mobile layout */
.about {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  overflow: auto;
}

.method {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
  overflow: auto;
}

.clients {
  grid-column: 2 / 3;
  grid-row: 4 / 5;
  overflow: auto;
}

.contact {
  grid-column: 2 / 3;
  grid-row: 5 / 6;
  overflow: auto;
}

.about-image {
  grid-column: 1 / -1;
  grid-row: 2 / 3;
  max-height: 600px;
  overflow: hidden;
}

.method-image {
  grid-column: 1 / -1;
  grid-row: 3 / 4;
  max-height: 600px;
  overflow: hidden;
}

.clients-image {
  grid-column: 1 / -1;
  grid-row: 4 / 5;
  max-height: 600px;
  overflow: hidden;
}

.contact-image {
  grid-column: 1 / -1;
  grid-row: 5 / 6;
  max-height: 600px;
  overflow: hidden;
}

/*This will be a lot of rules.... but be strategic and combine seletors*/


/* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-self: center;
  align-items: center;
  text-align: center;
  padding: 30px;
  background-color: rgba(255, 255, 255, 0.8);
}


/* Add your media query here */
@media screen and (min-width: 800px) {

  /* 1. Align the navigation to the right */
  nav {
    text-align: right;
    padding: 30px 0;
  }

  /* 2. Update the .container grid layout */
  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
    grid-gap: 15px;
  }

  /* 3. .about, .clients, .method-image, .contact-image start in 3rd column, span 2 columns */
  .about,
  .clients,
  .method-image,
  .contact-image {
    grid-column: 3 / 5;
  }

  /* 4. .method, .contact, .about-image, .clients-image start in 2nd column, span 2 columns */
  .method,
  .contact,
  .about-image,
  .clients-image {
    grid-column: 2 / 4;
  }

  /* 5. Ensure .text-block has a maximum height of 250px and handle overflow */
  .text-block {
    max-height: 250px;
    overflow: auto;
  }
}



/* Add your media query here */


/* Step 9: Write the selector/rule property to style the nav element */


/* Step 10: Write the selector/rule property to update the .container class */


/* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/



/* Step 13:Write the selector/rule property to update the .text-block class */